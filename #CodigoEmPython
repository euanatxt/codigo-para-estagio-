#Cálculo da variável SOMA
INDICE = 13
SOMA = 0
K = 0
while K < INDICE:
    K = K + 1
    SOMA = SOMA + K

print(SOMA)

#Verificação de um número na sequência de Fibonacci
def is_fibonacci(n):
    if n < 0:
        return False
    a, b = 0, 1
    while a < n:
        a, b = b, a + b
    return a == n

# Testando com um número informado
num = int(input("Digite um número para verificar se é da sequência de Fibonacci: "))
if is_fibonacci(num):
    print(f"O número {num} pertence à sequência de Fibonacci.")
else:
    print(f"O número {num} NÃO pertence à sequência de Fibonacci.")

#Análise do vetor de faturamento diário
{
    "faturamento": [100.0, 200.0, 300.0, null, 400.0, 500.0, null]
}

import json

data = '''
{
    "faturamento": [100.0, 200.0, 300.0, null, 400.0, 500.0, null]
}
'''

# Carregar o JSON
faturamento_data = json.loads(data)
faturamento = [valor for valor in faturamento_data["faturamento"] if valor is not None]

# Calcular menor, maior e média
menor = min(faturamento)
maior = max(faturamento)
media = sum(faturamento) / len(faturamento)

# Contar dias com faturamento acima da média
dias_acima_media = sum(1 for valor in faturamento if valor > media)

print(f"Menor valor de faturamento: R${menor:.2f}")
print(f"Maior valor de faturamento: R${maior:.2f}")
print(f"Número de dias com faturamento acima da média: {dias_acima_media}")


# Cálculo do percentual de representação de cada estado
# Faturamento por estado
faturamento = {
    "SP": 67836.43,
    "RJ": 36678.66,
    "MG": 29229.88,
    "ES": 27165.48,
    "Outros": 19849.53
}

# Calcular o total
total = sum(faturamento.values())

# Calcular e exibir percentual
percentuais = {estado: (valor / total) * 100 for estado, valor in faturamento.items()}

for estado, percentual in percentuais.items():
    print(f"{estado}: {percentual:.2f}%")

#inversão de uma string
def inverter_string(s):
    invertida = ''
    for char in s:
        invertida = char + invertida
    return invertida

# Testando com uma string fornecida
entrada = input("Digite uma string para inverter: ")
print("String invertida:", inverter_string(entrada))
